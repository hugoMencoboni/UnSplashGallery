{"version":3,"sources":["Components/TextImage/TextImage.js","store/Searchs/SearchTerm.Action.js","store/root.Epics.js","store/Searchs/DebounceSearch.Epic.js","store/Searchs/ChangeTheme.Reducer.js","store/root.Reducer.js","store/root.Store.js","Components/SearchInput/SearchInput.js","Components/Picture/Picture.js","Components/Gallery/Gallery.js","App.js","reportWebVitals.js","index.js"],"names":["TextImage","props","content","type","className","text","SEARCH_TERM","SEARCH_TERM_DEBOUNCED","combineEpics","action$","pipe","ofType","debounceTime","map","action","term","payload","ChangeThemeReducer","state","theme","RootReducer","combineReducers","epicMiddleware","createEpicMiddleware","store","createStore","rootReducer","applyMiddleware","run","rootEpic","mapDispatchToProps","inputChange","dispatch","SearchTermAction","connect","name","onChange","$event","target","value","viewBox","d","Picture","id","uuid","classes","w","h","src","join","loading","alt","position","Gallery","lenght","pictures","i","this","push","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SA0BeA,G,kBAvBG,SAAAC,GACd,IAAIC,EACJ,OAAQD,EAAME,MACV,IAAK,KACDD,EAAW,oBAAIE,UAAU,OAAd,8BAAsBH,EAAMI,OACvC,MACJ,IAAK,KACDH,EAAW,oBAAIE,UAAU,OAAd,8BAAsBH,EAAMI,OACvC,MACJ,IAAK,KACDH,EAAW,oBAAIE,UAAU,OAAd,8BAAsBH,EAAMI,OACvC,MACJ,IAAK,KACDH,EAAW,oBAAIE,UAAU,OAAd,8BAAsBH,EAAMI,OACvC,MACJ,QACIH,EAAW,oBAAIE,UAAU,OAAd,8BAAsBH,EAAMI,OAI/C,OAAQ,mDAAMH,MCtBLI,EAAc,cACdC,EAAwB,wB,gDCCtBC,eCCgB,SAAAC,GAAO,OAAIA,EAAQC,KAChDC,YAAOL,GACPM,YAAa,KACbC,aAAI,SAAAC,GAAM,OFF6BC,EEECD,EAAOE,QFFC,CAAEb,KAAMI,EAAuBS,QAASD,GAAjD,IAAAA,SGO1BE,EAVY,WAA0C,IAAzCC,EAAwC,uDAAhC,CAAEC,MAAO,UAAYL,EAAW,uCAClE,OAAQA,EAAOX,MACb,KAAKI,EACH,MAAO,CAAEY,MAAOL,EAAOE,SAEzB,QACE,OAAOE,ICHEE,EAFKC,YAAgB,CAAEJ,uBCEhCK,EAAiBC,cAEjBC,EAAQC,YACVC,EACAC,YAAgBL,IAGpBA,EAAeM,IAAIC,GAEJL,Q,gBCMTM,EAAqB,CACvBC,YAAa,SAAChB,GAAD,OAAUS,EAAMQ,SNjBD,SAAAjB,GAAI,MAAM,CAAEZ,KAAMG,EAAaU,QAASD,GMiB9BkB,CAAiBlB,MAG5CmB,cACX,KACAJ,EAFWI,EAlBK,SAAAjC,GAChB,OACI,sBAAKG,UAAU,YAAf,+BACI,uBAAOD,KAAK,OAAOgC,KAAK,SAASC,SAAU,SAACC,GAAD,OAAYpC,EAAM8B,YAAYM,EAAOC,OAAOC,QAAvF,uBACA,qBAAKnC,UAAU,cAAcoC,QAAQ,YAArC,8BACI,sBAAMC,EAAE,0ZAAR,+B,sDCIDC,EAXC,SAAAzC,GACZ,IAAM0C,EAAKC,cACPC,EAAU,CAAC,KAAD,OAAM5C,EAAM6C,GAAK,GAAjB,YAA2B7C,EAAM8C,GAAK,IAC9CC,EAAG,sCAAiD,KAAd/C,EAAM6C,GAAK,GAA9C,YAAuE,KAAd7C,EAAM8C,GAAK,GAApE,aAA+E9C,EAAMkB,OAAS,SAA9F,YAA0GwB,GACnH,OACI,qBAAKA,GAAIA,EAAIvC,UAAWyC,EAAQI,KAAK,KAAO,sBAA5C,8BACI,qBAAKC,QAAQ,QAAQF,IAAKA,EAAKG,IAAKlD,EAAMkB,MAAQ,WAAYf,UAAS,kBAAaH,EAAMmD,UAA1F,0BCLNC,E,4MACJnC,MAAQ,CACNoC,OAAQ,I,uDAKR,IADA,IAAIC,EAAW,GACPC,EAAI,EAAGA,EAAIC,KAAKvC,MAAMoC,OAAQE,IACpCD,EAASG,KAAM,cAAC,EAAD,CAAiBN,SAAUI,EAAGrC,MAAOsC,KAAKxD,MAAMkB,MAAhD,sBAAcqC,IAG/B,OAAQ,qBAAKpD,UAAU,qBAAf,8BAAqCmD,Q,GAX3BI,aAqBPzB,eANS,SAAChB,GACvB,MAAO,CACLC,MAAOD,EAAMD,mBAAmBE,SAMlC,KAFae,CAGbmB,GCZaO,MAZf,WACE,OACE,gCACE,cAAC,EAAD,CAAWvD,KAAK,mBAAmBF,KAAK,OACxC,qBAAKC,UAAU,wBAAf,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,QCASyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUhD,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJiD,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.dc33df61.chunk.js","sourcesContent":["import React from 'react';\r\nimport  './TextImage.scoped.scss';\r\n\r\nconst TextImage = props => {\r\n    let content;\r\n    switch (props.type) {\r\n        case 'h1':\r\n            content = (<h1 className=\"text\">{props.text}</h1>);\r\n            break;\r\n        case 'h2':\r\n            content = (<h2 className=\"text\">{props.text}</h2>);\r\n            break;\r\n        case 'h3':\r\n            content = (<h3 className=\"text\">{props.text}</h3>);\r\n            break;\r\n        case 'h4':\r\n            content = (<h4 className=\"text\">{props.text}</h4>);\r\n            break;\r\n        default:\r\n            content = (<h1 className=\"text\">{props.text}</h1>);\r\n            break;            \r\n    }\r\n\r\n    return (<div>{content}</div>);\r\n}\r\n\r\nexport default TextImage;\r\n","\r\nexport const SEARCH_TERM = 'Search_term';\r\nexport const SEARCH_TERM_DEBOUNCED = 'Search_term_debounced';\r\n\r\nexport const SearchTermAction = term  => ({ type: SEARCH_TERM, payload: term });\r\nexport const SearchTermActionDebounced = term => ({ type: SEARCH_TERM_DEBOUNCED, payload: term });","import { combineEpics } from 'redux-observable';\r\nimport { DebounceSearch } from './Searchs/DebounceSearch.Epic';\r\n \r\nexport default combineEpics(DebounceSearch);","import { SearchTermActionDebounced, SEARCH_TERM } from './SearchTerm.Action';\r\nimport { ofType } from 'redux-observable';\r\nimport { map, debounceTime } from \"rxjs/operators\";\r\n\r\nexport const DebounceSearch  = action$ => action$.pipe(\r\n  ofType(SEARCH_TERM),\r\n  debounceTime(500),\r\n  map(action => SearchTermActionDebounced(action.payload))\r\n);","import { SEARCH_TERM_DEBOUNCED } from './SearchTerm.Action';\r\n\r\nconst ChangeThemeReducer = (state = { theme: 'random' }, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_TERM_DEBOUNCED:\r\n      return { theme: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ChangeThemeReducer;","import ChangeThemeReducer from './Searchs/ChangeTheme.Reducer';\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst RootReducer = combineReducers({ ChangeThemeReducer });\r\n\r\nexport default RootReducer;","import { createEpicMiddleware } from 'redux-observable';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootEpic from './root.Epics';\r\nimport rootReducer from './root.Reducer';\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(epicMiddleware)\r\n);\r\n\r\nepicMiddleware.run(rootEpic);\r\n\r\nexport default store;","import React from 'react';\r\nimport { SearchTermAction } from '../../store/Searchs/SearchTerm.Action';\r\nimport store from '../../store/root.Store';\r\nimport  './SearchInput.scoped.scss';\r\nimport { connect } from 'react-redux'\r\n\r\nconst SearchInput = props => {\r\n    return (\r\n        <div className=\"container\">\r\n            <input type=\"text\" name=\"search\" onChange={($event) => props.inputChange($event.target.value)}/>\r\n            <svg className=\"search-icon\" viewBox=\"0 0 20 20\">\r\n                <path d=\"M19.129,18.164l-4.518-4.52c1.152-1.373,1.852-3.143,1.852-5.077c0-4.361-3.535-7.896-7.896-7.896\r\n                    c-4.361,0-7.896,3.535-7.896,7.896s3.535,7.896,7.896,7.896c1.934,0,3.705-0.698,5.078-1.853l4.52,4.519\r\n                    c0.266,0.268,0.699,0.268,0.965,0C19.396,18.863,19.396,18.431,19.129,18.164z M8.567,15.028c-3.568,0-6.461-2.893-6.461-6.461\r\n                    s2.893-6.461,6.461-6.461c3.568,0,6.46,2.893,6.46,6.461S12.135,15.028,8.567,15.028z\"></path>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    inputChange: (term) => store.dispatch(SearchTermAction(term)),\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(SearchInput);\r\n","import React from 'react';\r\nimport  './Picture.scoped.scss';\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Picture = props => {\r\n    const id = uuid();\r\n    let classes = [`w-${props.w || 1}`, `h-${props.h || 1}`];\r\n    const src = `https://source.unsplash.com/${(props.w || 1)*500}x${(props.h || 1)*500}/?${props.theme || 'random'}&${id}`\r\n    return (\r\n        <div id={id} className={classes.join(' ') + ' picture__container'}>\r\n            <img loading=\"eager\" src={src} alt={props.theme + ' picture'} className={`fade-in-${props.position}`}/>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Picture;\r\n","import React, { Component } from 'react';\r\nimport  './Gallery.scoped.scss';\r\nimport Picture from '../Picture/Picture';\r\nimport { connect } from 'react-redux'\r\n\r\nclass Gallery extends Component {\r\n  state = {\r\n    lenght: 20,\r\n  }\r\n\r\n  render() {\r\n    let pictures = [];\r\n    for(let i = 0; i < this.state.lenght; i++) {\r\n      pictures.push((<Picture key={i} position={i} theme={this.props.theme}></Picture>));\r\n    }\r\n\r\n    return (<div className=\"gallery__container\">{pictures}</div>);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    theme: state.ChangeThemeReducer.theme\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Gallery);\r\n","import './App.css';\nimport TextImage from './Components/TextImage/TextImage';\nimport SearchInput from './Components/SearchInput/SearchInput';\nimport Gallery from './Components/Gallery/Gallery';\n\nfunction App() {\n  return (\n    <div>\n      <TextImage text=\"UnSplash Gallery\" type=\"h1\"></TextImage>\n      <div className=\"searchInput-container\">\n        <SearchInput></SearchInput>\n      </div>\n      <Gallery></Gallery>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/root.Store';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>    \n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}